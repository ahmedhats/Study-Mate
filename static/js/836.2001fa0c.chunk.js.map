{"version":3,"file":"static/js/836.2001fa0c.chunk.js","mappings":"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","sources":["styles/InboxStyles.js","components/features/inbox/ConversationList.jsx","components/features/inbox/ChatHeader.jsx","components/features/inbox/MessageItem.jsx","components/features/inbox/MessagesArea.jsx","components/features/inbox/InputBox.jsx","components/features/inbox/NoChat.jsx","pages/Inbox.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MessageContainer = styled.div`\r\n  padding: 12px;\r\n  margin: 8px;\r\n  max-width: 70%;\r\n  border-radius: 8px;\r\n  background-color: ${(props) => (props.isSender ? \"#1890ff\" : \"#f0f2f5\")};\r\n  color: ${(props) => (props.isSender ? \"white\" : \"rgba(0, 0, 0, 0.85)\")};\r\n  align-self: ${(props) => (props.isSender ? \"flex-end\" : \"flex-start\")};\r\n`;\r\n\r\nexport const ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 120px);\r\n`;\r\n\r\nexport const MessagesArea = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  padding: 20px;\r\n  background: white;\r\n  border-top: 1px solid #f0f0f0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ConversationItem = styled.div`\r\n  padding: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  background-color: ${(props) => (props.active ? \"#e6f7ff\" : \"transparent\")};\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nexport const ChatHeader = styled.div`\r\n  padding: 16px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  background: white;\r\n`;\r\n\r\nexport const NoChat = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #999;\r\n  font-size: 16px;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n`;","import React from \"react\";\r\nimport { List, Input, Avatar, Typography, Badge } from \"antd\";\r\nimport { ConversationItem } from \"../../../styles/InboxStyles\";\r\n\r\nconst { Search } = Input;\r\nconst { Text } = Typography;\r\n\r\nconst ConversationList = ({ conversations, activeChat, onSelectChat }) => {\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"20px 16px\" }}>\r\n        <Search placeholder=\"Search messages\" />\r\n      </div>\r\n      <List\r\n        dataSource={conversations}\r\n        renderItem={(item) => (\r\n          <ConversationItem\r\n            active={activeChat?.id === item.id}\r\n            onClick={() => onSelectChat(item)}\r\n          >\r\n            <Badge count={item.unread}>\r\n              <Avatar src={item.avatar} size={40} />\r\n            </Badge>\r\n            <div style={{ marginLeft: 12, flex: 1 }}>\r\n              <Text strong>{item.name}</Text>\r\n              <div>\r\n                <Text type=\"secondary\" style={{ fontSize: \"14px\" }}>\r\n                  {item.lastMessage}\r\n                </Text>\r\n              </div>\r\n            </div>\r\n            <Text type=\"secondary\" style={{ fontSize: \"12px\" }}>\r\n              {item.time}\r\n            </Text>\r\n          </ConversationItem>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n","import React from \"react\";\r\nimport { Avatar, Typography } from \"antd\";\r\nimport { ChatHeader as StyledChatHeader } from \"../../../styles/InboxStyles\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ChatHeader = ({ activeChat }) => {\r\n  if (!activeChat) return null;\r\n\r\n  return (\r\n    <StyledChatHeader>\r\n      <Avatar src={activeChat.avatar} size={40} />\r\n      <div>\r\n        <Text strong style={{ fontSize: \"16px\", display: \"block\" }}>\r\n          {activeChat.name}\r\n        </Text>\r\n        <Text type=\"secondary\">Online</Text>\r\n      </div>\r\n    </StyledChatHeader>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { MessageContainer } from \"../../../styles/InboxStyles\";\n\nconst { Text } = Typography;\n\nconst MessageItem = ({ message }) => {\n  return (\n    <MessageContainer isSender={message.isSender}>\n      <div style={{ marginBottom: 4 }}>\n        <Text\n          strong\n          style={{\n            color: message.isSender ? \"white\" : \"inherit\",\n          }}\n        >\n          {message.sender}\n        </Text>\n      </div>\n      {message.content}\n      <div style={{ marginTop: 4 }}>\n        <Text\n          style={{\n            fontSize: \"12px\",\n            color: message.isSender\n              ? \"rgba(255,255,255,0.8)\"\n              : \"rgba(0,0,0,0.45)\",\n          }}\n        >\n          {message.time}\n        </Text>\n      </div>\n    </MessageContainer>\n  );\n};\n\nexport default MessageItem;\n ","import React from \"react\";\nimport { MessagesArea as StyledMessagesArea } from \"../../../styles/InboxStyles\";\nimport MessageItem from \"./MessageItem\";\n\nconst MessagesArea = ({ messages }) => {\n  return (\n    <StyledMessagesArea>\n      {messages.map((message) => (\n        <MessageItem key={message.id} message={message} />\n      ))}\n    </StyledMessagesArea>\n  );\n};\n\nexport default MessagesArea;\n ","import React from \"react\";\nimport { Input, Popover } from \"antd\";\nimport { SendOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { InputContainer } from \"../../../styles/InboxStyles\";\n\nconst InputBox = ({ value, onChange, onSend, onEmojiClick }) => {\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      onSend();\n    }\n  };\n\n  return (\n    <InputContainer>\n      <Input\n        size=\"large\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        onKeyPress={handleKeyPress}\n        placeholder=\"Type a message...\"\n        style={{ flex: 1 }}\n        suffix={\n          <div style={{ display: \"flex\", gap: \"8px\" }}>\n            <Popover\n              content={<EmojiPicker onEmojiClick={onEmojiClick} />}\n              trigger=\"click\"\n              placement=\"topRight\"\n            >\n              <SmileOutlined style={{ color: \"#1890ff\", cursor: \"pointer\" }} />\n            </Popover>\n            <SendOutlined\n              onClick={onSend}\n              style={{ color: \"#1890ff\", cursor: \"pointer\" }}\n            />\n          </div>\n        }\n      />\n    </InputContainer>\n  );\n};\n\nexport default InputBox;\n ","import React from \"react\";\r\nimport { MessageOutlined } from \"@ant-design/icons\";\r\nimport { NoChat as StyledNoChat } from \"../../../styles/InboxStyles\";\r\n\r\nconst NoChat = () => {\r\n  return (\r\n    <StyledNoChat>\r\n      <MessageOutlined style={{ fontSize: \"32px\", opacity: 0.5 }} />\r\n      <p>Select a conversation to start chatting</p>\r\n    </StyledNoChat>\r\n  );\r\n};\r\n\r\nexport default NoChat; ","import React, { useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { ChatContainer } from \"../styles/InboxStyles\";\r\nimport ConversationList from \"../components/features/inbox/ConversationList\";\r\nimport ChatHeader from \"../components/features/inbox/ChatHeader\";\r\nimport MessagesArea from \"../components/features/inbox/MessagesArea\";\r\nimport InputBox from \"../components/features/inbox/InputBox\";\r\nimport NoChat from \"../components/features/inbox/NoChat\";\r\n\r\nconst { Content, Sider } = Layout;\r\n\r\nconst Inbox = () => {\r\n  const [activeChat, setActiveChat] = useState(null);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [conversations, setConversations] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Penny Adi W\",\r\n      avatar: \"https://xsgames.co/randomusers/avatar.php?g=male\",\r\n      lastMessage: \"Thanks a lot Doctor\",\r\n      time: \"14h\",\r\n      unread: 2,\r\n      messages: [\r\n        {\r\n          id: 1,\r\n          content:\r\n            \"I just updated the task management dashboard. Can you check if everything looks good?\",\r\n          sender: \"Penny Adi W\",\r\n          isSender: false,\r\n          time: \"10:30 AM\",\r\n        },\r\n        {\r\n          id: 2,\r\n          content:\r\n            \"Yes, lets focus on that. Also, can you review the timeline for the project integration?\",\r\n          sender: \"Me\",\r\n          isSender: true,\r\n          time: \"10:35 AM\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Nina Kartika\",\r\n      avatar: \"https://xsgames.co/randomusers/avatar.php?g=female\",\r\n      lastMessage: \"Add consultation with me\",\r\n      time: \"2d\",\r\n      unread: 0,\r\n      messages: [\r\n        {\r\n          id: 1,\r\n          content: \"Hi, can we schedule a consultation?\",\r\n          sender: \"Nina Kartika\",\r\n          isSender: false,\r\n          time: \"09:15 AM\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Arvin Deniawan\",\r\n      avatar: \"https://xsgames.co/randomusers/avatar.php?g=male\",\r\n      lastMessage: \"Just need one by the way\",\r\n      time: \"Yesterday\",\r\n      unread: 1,\r\n      messages: [\r\n        {\r\n          id: 1,\r\n          content: \"Just need one by the way\",\r\n          sender: \"Arvin Deniawan\",\r\n          isSender: false,\r\n          time: \"Yesterday\",\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage.trim() || !activeChat) return;\r\n\r\n    const newMsg = {\r\n      id: Date.now(),\r\n      content: newMessage,\r\n      sender: \"Me\",\r\n      isSender: true,\r\n      time: new Date().toLocaleTimeString([], {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n    };\r\n\r\n    setConversations((prev) =>\r\n      prev.map((conv) => {\r\n        if (conv.id === activeChat.id) {\r\n          return {\r\n            ...conv,\r\n            messages: [...conv.messages, newMsg],\r\n            lastMessage: newMessage,\r\n            time: \"Just now\",\r\n          };\r\n        }\r\n        return conv;\r\n      })\r\n    );\r\n\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  const onEmojiClick = (emojiObject) => {\r\n    setNewMessage((prev) => prev + emojiObject.emoji);\r\n  };\r\n\r\n  const handleSelectChat = (chat) => {\r\n    setActiveChat(chat);\r\n    setConversations((prev) =>\r\n      prev.map((conv) => (conv.id === chat.id ? { ...conv, unread: 0 } : conv))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ height: \"100vh\" }}>\r\n      <Sider\r\n        width={300}\r\n        theme=\"light\"\r\n        style={{ borderRight: \"1px solid #f0f0f0\" }}\r\n      >\r\n        <ConversationList\r\n          conversations={conversations}\r\n          activeChat={activeChat}\r\n          onSelectChat={handleSelectChat}\r\n        />\r\n      </Sider>\r\n      <Content style={{ background: \"#fff\" }}>\r\n        {activeChat ? (\r\n          <>\r\n            <ChatHeader activeChat={activeChat} />\r\n            <ChatContainer>\r\n              <MessagesArea messages={activeChat.messages} />\r\n              <InputBox\r\n                value={newMessage}\r\n                onChange={setNewMessage}\r\n                onSend={handleSendMessage}\r\n                onEmojiClick={onEmojiClick}\r\n              />\r\n            </ChatContainer>\r\n          </>\r\n        ) : (\r\n          <NoChat />\r\n        )}\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n"],"names":["MessageContainer","styled","div","props","isSender","ChatContainer","MessagesArea","InputContainer","ConversationItem","active","ChatHeader","NoChat","Search","Input","Text","Typography","_ref","conversations","activeChat","onSelectChat","_jsxs","_Fragment","children","_jsx","style","padding","placeholder","List","dataSource","renderItem","item","id","onClick","Badge","count","unread","Avatar","src","avatar","size","marginLeft","flex","strong","name","type","fontSize","lastMessage","time","StyledChatHeader","display","message","marginBottom","color","sender","content","marginTop","messages","StyledMessagesArea","map","MessageItem","value","onChange","onSend","onEmojiClick","e","target","onKeyPress","key","shiftKey","preventDefault","suffix","gap","Popover","EmojiPicker","trigger","placement","SmileOutlined","cursor","SendOutlined","StyledNoChat","MessageOutlined","opacity","Content","Sider","Layout","Inbox","setActiveChat","useState","newMessage","setNewMessage","setConversations","height","width","theme","borderRight","ConversationList","chat","prev","conv","background","InputBox","handleSendMessage","trim","newMsg","Date","now","toLocaleTimeString","hour","minute","emojiObject","emoji"],"sourceRoot":""}